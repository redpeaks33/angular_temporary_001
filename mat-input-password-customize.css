::ng-deep .password_container {
  margin: 100px;
  padding: 100px;
  height: 100px;

  & .mat-form-field {
    width: 200px !important;

    .mat-form-field-wrapper {
      margin: 0px !important;
      padding: 0px !important;

      .mat-form-field-flex {
        padding: 0px !important;
        height: 46px !important;
        display: flex;
        align-items: center;

        .mat-form-field-outline {
          height: 46px !important;
          color: #dadada;
        }
        .mat-form-field-infix {
          margin: 0px !important;
          margin-left: 10px !important;
          margin-bottom: 3px !important;
          font-size: 14px;
          line-height: 21px;
          letter-spacing: 0px;

          .mat-form-field-label-wrapper {
            display: none;
          }
        }

        .mat-form-field-suffix {
          .mat-icon {
            font-size: 12px;
            line-height:21px;
            color: #5290F4;
            width: 36px !important;
            height: 21px !important;
            text-align:center;
            margin-right:10px;
            letter-spacing:0px;
          }
        }
      }

      .mat-form-field-subscript-wrapper {
        display: none !important;
      }
    }
  }
}
<div class="password_container">
  <mat-form-field appearance="outline">
    <input matInput placeholder="Password" [type]="hide ? 'password' : 'text'" formControlName="password" required>
    <mat-icon matSuffix (click)="hide = !hide">{{hide ? '表示' : '非表示'}}</mat-icon>
  </mat-form-field>
</div>

import { FormGroup, FormControl, Validators } from '@angular/forms';

  signin: FormGroup = new FormGroup({
    email: new FormControl('', [Validators.email, Validators.required]),
    password: new FormControl('', [Validators.required, Validators.min(3)])
  });
  hide = true;
  get emailInput() { return this.signin.get('email'); }
  get passwordInput() { return this.signin.get('password'); }

